openapi: 3.0.0
info:
  title: Notificaties API
  description: 'Een API om een notificatierouteringscomponent te benaderen.


    Deze API voorziet in drie functionaliteiten voor notificaties:


    * registreren van kanalen (=exchanges)

    * abonneren van consumers op kanalen

    * ontvangen en routeren van berichten


    **Registreren van kanalen**


    Een component dekt een bepaald domein af, en heeft het recht om hiervoor een

    kanaal te registeren waarop eigen notificaties verstuurd worden. Een kanaal

    is uniek in naam. Een component dient dus te controleren of een kanaal al

    bestaat voor het registreren. Bij het registeren van kanalen wordt een

    documentatielink verwacht die beschrijft welke events en kenmerken van

    toepassing zijn op het kanaal.


    **Abonneren**


    Consumers kunnen een abonnement aanmaken voor een of meerdere kanalen. Per

    kanaal kan op de kenmerken van het kanaal gefilterd worden. Consumers dienen

    zelf een endpoint te bouwen waarop berichten afgeleverd (kunnen) worden.


    **Routeren van berichten**


    Bronnen sturen berichten naar deze API, die vervolgens de berichten onveranderd

    routeert naar alle abonnees.


    **Afhankelijkheden**


    Deze API is afhankelijk van:


    * Autorisaties API


    **Autorisatie**


    Deze API vereist autorisatie. Je kan de

    [token-tool](https://zaken-auth.vng.cloud/) gebruiken om JWT-tokens te

    genereren.


    **Handige links**


    * [Documentatie](https://vng-realisatie.github.io/gemma-zaken/standaard)

    * [Zaakgericht werken](https://vng-realisatie.github.io/gemma-zaken)

    '
  contact:
    url: https://vng-realisatie.github.io/gemma-zaken
    email: standaarden.ondersteuning@vng.nl
  license:
    name: EUPL 1.2
    url: https://opensource.org/licenses/EUPL-1.2
  version: 2.0.0-alpha6
security:
- JWT-Claims: []
paths:
  /domains:
    get:
      operationId: domain_list
      description: Alle DOMAINnen opvragen.
      parameters:
      - name: name
        in: query
        description: Name of the domain.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Domain'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - domains
      security:
      - JWT-Claims:
        - (events.publish | events.consume)
    post:
      operationId: domain_create
      description: Maak een DOMAIN aan.
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
        required: true
      responses:
        '201':
          description: Created
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
            Location:
              schema:
                type: string
                format: uri
              description: URL waar de resource leeft.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - domains
      security:
      - JWT-Claims:
        - events.publish
    parameters: []
  /domains/{uuid}:
    get:
      operationId: domain_read
      description: Een specifiek DOMAIN opvragen.
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - domains
      security:
      - JWT-Claims:
        - (events.publish | events.consume)
    parameters:
    - name: uuid
      in: path
      description: UUID of the domain.
      required: true
      schema:
        type: string
        format: uuid
  /events:
    post:
      operationId: events_create
      description: Publiceer een notificatie.
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      responses:
        '200':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
      tags:
      - events
      security:
      - JWT-Claims:
        - events.publish
    parameters: []
  /subscriptions:
    get:
      operationId: subscription_list
      description: Alle SUBSCRIPTIONs opvragen.
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - subscriptions
      security:
      - JWT-Claims:
        - (events.consume | events.publish)
    post:
      operationId: subscription_create
      description: Maak een SUBSCRIPTION aan.
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/Subscription'
      responses:
        '201':
          description: Created
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
            Location:
              schema:
                type: string
                format: uri
              description: URL waar de resource leeft.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - subscriptions
      security:
      - JWT-Claims:
        - events.consume
    parameters: []
  /subscriptions/{uuid}:
    get:
      operationId: subscription_read
      description: Een specifiek SUBSCRIPTION opvragen.
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - subscriptions
      security:
      - JWT-Claims:
        - (events.consume | events.publish)
    put:
      operationId: subscription_update
      description: Werk een SUBSCRIPTION in zijn geheel bij.
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/Subscription'
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - subscriptions
      security:
      - JWT-Claims:
        - events.consume
    patch:
      operationId: subscription_partial_update
      summary: Opvragen en bewerken van SUBSCRIPTIONs.
      description: 'Een consumer kan een SUBSCRIPTION nemen op een DOMAIN om zo EVENTs
        te

        ontvangen die op dat DOMAIN gepubliceerd worden.'
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/Subscription'
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - subscriptions
    delete:
      operationId: subscription_delete
      description: Verwijder een SUBSCRIPTION.
      responses:
        '204':
          description: No content
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - subscriptions
      security:
      - JWT-Claims:
        - events.consume
    parameters:
    - name: uuid
      in: path
      description: UUID of the subscription.
      required: true
      schema:
        type: string
        format: uuid
tags:
- name: domains
  description: 'Op een DOMAIN publiceren componenten (bronnen) hun EVENTs. Alleen

    componenten die EVENTs willen publiceren dienen een DOMAIN aan te

    maken. Dit DOMAIN kan vervolgens aan consumers worden gegeven om zich op te

    abonneren.'
- name: events
  description: 'Een EVENT wordt gepubliceerd op een DOMAIN. Alle consumers die een

    SUBSCRIPTION hebben op dit DOMAIN ontvangen de SUBSCRIPTION.'
- name: subscriptions
  description: 'Een consumer kan een SUBSCRIPTION nemen op een DOMAIN om zo EVENTs
    te

    ontvangen die op dat DOMAIN gepubliceerd worden.'
servers:
- url: /api/v1
components:
  responses:
    '400':
      description: Bad request
      headers:
        API-version:
          schema:
            type: string
          description: 'Geeft een specifieke API-versie aan in de context van een
            specifieke aanroep. Voorbeeld: 1.2.1.'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ValidatieFout'
    '401':
      description: Unauthorized
      headers:
        API-version:
          schema:
            type: string
          description: 'Geeft een specifieke API-versie aan in de context van een
            specifieke aanroep. Voorbeeld: 1.2.1.'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Fout'
    '403':
      description: Forbidden
      headers:
        API-version:
          schema:
            type: string
          description: 'Geeft een specifieke API-versie aan in de context van een
            specifieke aanroep. Voorbeeld: 1.2.1.'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Fout'
    '404':
      description: Not found
      headers:
        API-version:
          schema:
            type: string
          description: 'Geeft een specifieke API-versie aan in de context van een
            specifieke aanroep. Voorbeeld: 1.2.1.'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Fout'
    '406':
      description: Not acceptable
      headers:
        API-version:
          schema:
            type: string
          description: 'Geeft een specifieke API-versie aan in de context van een
            specifieke aanroep. Voorbeeld: 1.2.1.'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Fout'
    '409':
      description: Conflict
      headers:
        API-version:
          schema:
            type: string
          description: 'Geeft een specifieke API-versie aan in de context van een
            specifieke aanroep. Voorbeeld: 1.2.1.'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Fout'
    '410':
      description: Gone
      headers:
        API-version:
          schema:
            type: string
          description: 'Geeft een specifieke API-versie aan in de context van een
            specifieke aanroep. Voorbeeld: 1.2.1.'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Fout'
    '412':
      description: Precondition failed
      headers:
        API-version:
          schema:
            type: string
          description: 'Geeft een specifieke API-versie aan in de context van een
            specifieke aanroep. Voorbeeld: 1.2.1.'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Fout'
    '415':
      description: Unsupported media type
      headers:
        API-version:
          schema:
            type: string
          description: 'Geeft een specifieke API-versie aan in de context van een
            specifieke aanroep. Voorbeeld: 1.2.1.'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Fout'
    '429':
      description: Too many requests
      headers:
        API-version:
          schema:
            type: string
          description: 'Geeft een specifieke API-versie aan in de context van een
            specifieke aanroep. Voorbeeld: 1.2.1.'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Fout'
    '500':
      description: Internal server error
      headers:
        API-version:
          schema:
            type: string
          description: 'Geeft een specifieke API-versie aan in de context van een
            specifieke aanroep. Voorbeeld: 1.2.1.'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Fout'
  requestBodies:
    Subscription:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Subscription'
      required: true
  securitySchemes:
    JWT-Claims:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Domain:
      required:
      - name
      type: object
      properties:
        name:
          title: Naam
          description: Name of the domain.
          type: string
          maxLength: 255
          minLength: 1
        documentationLink:
          title: Documentatie link
          description: Link to human readable information about the domain and its
            notifications.
          type: string
          format: uri
          maxLength: 200
        filterAttributes:
          description: Filter attributes offered by the domain.
          type: array
          items:
            title: Filter attributes
            type: string
            maxLength: 255
            minLength: 1
        url:
          title: Url
          description: URL-referentie naar dit object. Dit is de unieke identificatie
            en locatie van dit object.
          type: string
          format: uri
          readOnly: true
          maxLength: 1000
          minLength: 1
    Fout:
      required:
      - code
      - title
      - status
      - detail
      - instance
      type: object
      properties:
        type:
          title: Type
          description: URI referentie naar het type fout, bedoeld voor developers
          type: string
        code:
          title: Code
          description: Systeemcode die het type fout aangeeft
          type: string
          minLength: 1
        title:
          title: Title
          description: Generieke titel voor het type fout
          type: string
          minLength: 1
        status:
          title: Status
          description: De HTTP status code
          type: integer
        detail:
          title: Detail
          description: Extra informatie bij de fout, indien beschikbaar
          type: string
          minLength: 1
        instance:
          title: Instance
          description: URI met referentie naar dit specifiek voorkomen van de fout.
            Deze kan gebruikt worden in combinatie met server logs, bijvoorbeeld.
          type: string
          minLength: 1
    FieldValidationError:
      required:
      - name
      - code
      - reason
      type: object
      properties:
        name:
          title: Name
          description: Naam van het veld met ongeldige gegevens
          type: string
          minLength: 1
        code:
          title: Code
          description: Systeemcode die het type fout aangeeft
          type: string
          minLength: 1
        reason:
          title: Reason
          description: Uitleg wat er precies fout is met de gegevens
          type: string
          minLength: 1
    ValidatieFout:
      required:
      - code
      - title
      - status
      - detail
      - instance
      - invalidParams
      type: object
      properties:
        type:
          title: Type
          description: URI referentie naar het type fout, bedoeld voor developers
          type: string
        code:
          title: Code
          description: Systeemcode die het type fout aangeeft
          type: string
          minLength: 1
        title:
          title: Title
          description: Generieke titel voor het type fout
          type: string
          minLength: 1
        status:
          title: Status
          description: De HTTP status code
          type: integer
        detail:
          title: Detail
          description: Extra informatie bij de fout, indien beschikbaar
          type: string
          minLength: 1
        instance:
          title: Instance
          description: URI met referentie naar dit specifiek voorkomen van de fout.
            Deze kan gebruikt worden in combinatie met server logs, bijvoorbeeld.
          type: string
          minLength: 1
        invalidParams:
          type: array
          items:
            $ref: '#/components/schemas/FieldValidationError'
    Event:
      required:
      - id
      - specversion
      - source
      - domain
      - type
      type: object
      properties:
        id:
          title: Id
          description: Identifies the event. Producers MUST ensure that source + id
            is unique for each distinct event. SHOULD be a UUID.
          type: string
          minLength: 1
        specversion:
          title: Specversion
          description: The version of the CloudEvents specification which the event
            uses. Compliant event producers MUST use a value of 1.0 when referring
            to this version of the specification.
          type: string
          enum:
          - '1.0'
        source:
          title: Source
          description: Identifies the context in which an event happened. SHOULD be
            a URN notation with 'nld' as namespace identifier. SHOULD contain consecutive
            a unique identifier of the organization that publishes the event followed
            by the source system that publishes the event. Involved organizations
            SHOULD agree on how organizations and systems are uniquely identified
            (e.g. via the use of OIN, KVK-nummer or eIDAS legal identifier for organization
            identification);.
          type: string
          minLength: 1
        domain:
          title: Domain
          description: Name of the domain to which the event belongs. Can be seen
            as the namespace of the event.(This attribute is not listed in the GOV
            NL profile for CloudEvents).
          type: string
        type:
          title: Type
          description: Beschrijft het type EVENT afkomstig van het specifieke DOMAIN.This
            attribute contains a value describing the type of event. Type SHOULD start
            with the domain followed by the name of the event. Events SHOULD be expressed
            in the past tense. If subtypes are required those SHOULD be expressed
            using a dot '.' between the super and subtype(s). The type MAY contain
            version information. Version information SHOULD be appended at the end
            of the string.
          type: string
          minLength: 1
        time:
          title: Time
          description: Timestamp of the event. SHOULD be the timestamp the event was
            registered in the source system and NOT the time the event occurred in
            reality. The exact meaning of time MUST be clearly documented.
          type: string
          format: date-time
          nullable: true
        subscription:
          title: Subscription
          description: Usually empty. Only used in situations where notificationservices
            are chained. For example notificationservice2 (ns2) is subscribed to notifcationservice1
            (ns1). When ns1 sends an event to ns2 this attribute SHOULD contain the
            subscription id of the subscription that ns1 has on ns2 (that was resposible
            for receiving the event). Note this attribute is overwritten when the
            event is passed through to a client. It will be set to the value of the
            subscription id of the subscription of the client.
          type: string
          format: uuid
          nullable: true
        subscriberReference:
          title: Subscriberreference
          description: Usually empty. Only used in situations where notificationservices
            are chained. For example notificationservice2 (ns2) is subscribed to notifcationservice1
            (ns1). When ns1 sends an event to ns2 this attribute COULD contain the
            subscriberReference the was specified when ns2 subscribed to ns1. Note
            this attribute is overwritten when the event is passed through to a client.
            It will be set to the value of the subscriberReference of the subscription
            of the client (when specified by the client).
          type: string
          maxLength: 255
          minLength: 1
          nullable: true
        datacontenttype:
          title: Datacontenttype
          description: Content type of data value. In this version of the API the
            value MUST be 'application/json'. In future versions of the API other
            values such as described in RFC 2046 MAY be used.
          type: string
          minLength: 1
          nullable: true
        dataschema:
          title: Dataschema
          description: Identifies the schema that data adheres to.
          type: string
          format: uri
          minLength: 1
          nullable: true
        sequence:
          title: Sequence
          description: Value expressing the relative order of the event. This enables
            interpretation of data supercedence.
          type: string
          minLength: 1
          nullable: true
        sequencetype:
          title: Sequencetype
          description: Specifies the semantics of the sequence attribute. (Currently
            limited to the value INTEGER).
          type: string
          enum:
          - Integer
          nullable: true
        subject:
          title: Subject
          description: Included to be compatible with CloudEvents specification. The
            GOV NL profile states 'Decision on whether or not to use the attribute
            and/or the exact interpretation is postponed. To be determined partly
            on the basis of future agreements about subscription and filtering.'
          type: string
          minLength: 1
          nullable: true
        data:
          title: Data
          type: object
          nullable: true
        data_base64:
          title: Data base64
          description: The presence of the data_base64 member clearly indicates that
            the value is a Base64 encoded binary data, which the serializer MUST decode
            into a binary runtime data type.
          type: string
          minLength: 1
          nullable: true
        dataref:
          title: Dataref
          description: A reference to a location where the event payload is stored.
            If both the data attribute and the dataref attribute are specified their
            contents MUST be identical.
          type: string
          minLength: 1
          nullable: true
    ProtocolSettings:
      type: object
      properties:
        headers:
          title: Headers
          type: object
          additionalProperties:
            type: string
            maxLength: 255
            minLength: 1
        method:
          title: Method
          type: string
          enum:
          - POST
      nullable: true
    SinkCredential:
      required:
      - credentialType
      - accessToken
      - accessTokenExpiresUtc
      - accessTokenType
      type: object
      properties:
        credentialType:
          title: Credential type
          type: string
          enum:
          - ACCESSTOKEN
        accessToken:
          title: Access token
          type: string
          minLength: 1
        accessTokenExpiresUtc:
          title: Access token expires utc
          type: string
          format: date-time
        accessTokenType:
          title: Access token type
          type: string
          enum:
          - bearer
      nullable: true
    Subscription:
      required:
      - protocol
      - sink
      type: object
      properties:
        id:
          title: Id
          description: UUID of the subscription.
          type: string
          format: uuid
          readOnly: true
        protocol:
          title: Protocol
          description: Identifier of a delivery protocol.
          type: string
          enum:
          - HTTP
        protocolSettings:
          $ref: '#/components/schemas/ProtocolSettings'
        sink:
          title: Sink
          description: The address to which events shall be delivered using the selected
            protocol.
          type: string
          format: uri
          maxLength: 200
          minLength: 1
        sinkCredential:
          $ref: '#/components/schemas/SinkCredential'
        config:
          title: Config
          description: Implementation-specific configuration parameters needed by
            the subscription manager for acquiring events.
          type: object
          nullable: true
        source:
          title: Source
          description: Source to which the subscription applies. May be implied by
            the request address.
          type: string
          maxLength: 255
          nullable: true
        domain:
          title: Domain
          description: Domain to which the subscription applies.
          type: string
          nullable: true
        types:
          description: CloudEvent types eligible to be delivered by this subscription.
          type: array
          items:
            title: Types
            type: string
            maxLength: 255
            minLength: 1
          nullable: true
        subscriberReference:
          title: Subscriber reference
          description: Events that are send to the subscriber will contain this reference.
            The subscriber can use the reference for internal routing of the event.
          type: string
          maxLength: 255
          nullable: true
        filters:
          title: Filters
          description: This filter evaluates to 'true' if all contained filters are
            'true'.
          type: object
