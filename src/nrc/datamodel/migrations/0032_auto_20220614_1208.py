# Generated by Django 3.2.13 on 2022-06-14 12:08

import uuid

import django.db.models.deletion
from django.db import migrations, models

import django_better_admin_arrayfield.models.fields


class Migration(migrations.Migration):

    dependencies = [
        ("datamodel", "0031_subscription_filters"),
    ]

    operations = [
        migrations.AlterField(
            model_name="subscription",
            name="config",
            field=models.JSONField(
                blank=True,
                help_text="Implementation-specific configuration parameters needed by the subscription manager for acquiring events.",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="subscription",
            name="domain",
            field=models.ForeignKey(
                blank=True,
                help_text="Domain to which the subscription applies.",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="domains",
                to="datamodel.domain",
                verbose_name="Domain",
            ),
        ),
        migrations.AlterField(
            model_name="subscription",
            name="filters",
            field=models.JSONField(
                blank=True,
                default=dict,
                help_text="This filter evaluates to 'true' if all contained filters are 'true'.",
            ),
        ),
        migrations.AlterField(
            model_name="subscription",
            name="protocol",
            field=models.CharField(
                choices=[("HTTP", "HTTP")],
                help_text="Identifier of a delivery protocol.",
                max_length=255,
            ),
        ),
        migrations.AlterField(
            model_name="subscription",
            name="protocol_settings",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="subscription",
            name="sink",
            field=models.URLField(
                help_text="The address to which events shall be delivered using the selected protocol."
            ),
        ),
        migrations.AlterField(
            model_name="subscription",
            name="sink_credential",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="subscription",
            name="source",
            field=models.CharField(
                blank=True,
                help_text="Source to which the subscription applies. May be implied by the request address.",
                max_length=255,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="subscription",
            name="subscriber_reference",
            field=models.CharField(
                blank=True,
                help_text="Events that are send to the subscriber will contain this reference. The subscriber can use the reference for internal routing of the event.",
                max_length=255,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="subscription",
            name="types",
            field=django_better_admin_arrayfield.models.fields.ArrayField(
                base_field=models.CharField(max_length=255),
                blank=True,
                help_text="CloudEvent types eligible to be delivered by this subscription.",
                null=True,
                size=None,
            ),
        ),
        migrations.AlterField(
            model_name="subscription",
            name="uuid",
            field=models.UUIDField(
                default=uuid.uuid4, help_text="UUID of the subscription.", unique=True
            ),
        ),
    ]
